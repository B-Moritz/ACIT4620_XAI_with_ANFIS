# WARNING: this source code was automatically generated by pyFUME.
from simpful import *

FS = FuzzySystem(show_banner=False)
RULE1 = "IF (yield_of_CT IS cluster1) AND (Tmax IS cluster1) AND (Tmin IS cluster1) THEN (OUTPUT IS fun1)"
RULE2 = "IF (yield_of_CT IS cluster2) AND (Tmax IS cluster2) AND (Tmin IS cluster2) THEN (OUTPUT IS fun2)"
RULE3 = "IF (yield_of_CT IS cluster3) AND (Tmax IS cluster3) AND (Tmin IS cluster3) THEN (OUTPUT IS fun3)"
FS.add_rules([RULE1, RULE2, RULE3])

FS.set_output_function('fun1', '-7.240398e-06*yield_of_CT+5.054476e-03*Tmax+1.865404e-03*Tmin+-1.537795e-01')
FS.set_output_function('fun2', '-4.045782e-06*yield_of_CT+5.620047e-03*Tmax+2.055391e-03*Tmin+-2.029618e-01')
FS.set_output_function('fun3', '-8.085627e-06*yield_of_CT+9.724654e-03*Tmax+-1.170833e-03*Tmin+-2.610321e-01')

FS_1 = FuzzySet(function=Gaussian_MF(20886.376882, 8325.377053), term='cluster1')
FS_2 = FuzzySet(function=Gaussian_MF(8952.209121, 2408.159281), term='cluster2')
FS_3 = FuzzySet(function=Gaussian_MF(-22771.074362, 26748.837205), term='cluster3')
MF_yield_of_CT = LinguisticVariable([FS_1, FS_2, FS_3], concept='yield_of_CT' , universe_of_discourse=(220.0, 38690.0))
FS.add_linguistic_variable('yield_of_CT', MF_yield_of_CT)

FS_4 = FuzzySet(function=Gaussian_MF(28.354451, 74.781076), term='cluster1')
FS_5 = FuzzySet(function=Gaussian_MF(29.965735, 84.335433), term='cluster2')
FS_6 = FuzzySet(function=Gaussian_MF(33.673378, 15.323095), term='cluster3')
MF_Tmax = LinguisticVariable([FS_4, FS_5, FS_6], concept='Tmax' , universe_of_discourse=(18.50414, 41.91501))
FS.add_linguistic_variable('Tmax', MF_Tmax)

FS_7 = FuzzySet(function=Gaussian_MF(9.110019, 16.639423), term='cluster1')
FS_8 = FuzzySet(function=Gaussian_MF(12.364940, 67.718665), term='cluster2')
FS_9 = FuzzySet(function=Gaussian_MF(6.875904, 42.123465), term='cluster3')
MF_Tmin = LinguisticVariable([FS_7, FS_8, FS_9], concept='Tmin' , universe_of_discourse=(-9.69776, 27.14498))
FS.add_linguistic_variable('Tmin', MF_Tmin)


# end of automatically generated code #